AWSTemplateFormatVersion: 2010-09-09

Parameters:

  VpcId:
    Type: AWS::EC2::VPC::Id

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>

Resources:

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Ref AWS::StackName
      GroupDescription: !Ref AWS::StackName
      VpcId: !Ref VpcId

  SecurityGroupHTTPInbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0

  ApplicationLoadBalancer:
    DependsOn: LogsBucketPolicy
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref AWS::StackName
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '30'
        - Key: access_logs.s3.enabled
          Value: 'true'
        - Key: access_logs.s3.bucket
          Value: !Ref LogsBucket
        - Key: routing.http.drop_invalid_header_fields.enabled
          Value: 'true'
      Subnets: !Ref Subnets
      SecurityGroups:
        - !Ref SecurityGroup

  HTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: application/json
            StatusCode: '503'
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  LogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::AccountId}-${AWS::StackName}
      LifecycleConfiguration:
        Rules:
          - Status: Enabled
            ExpirationInDays: 7
      NotificationConfiguration:
        LambdaConfigurations: 
          - Event: s3:ObjectCreated:*
            Function: !GetAtt Lambda.Arn

  LogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LogsBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: s3:PutObject
            Principal:
              AWS: 783225319266
            Resource: !Sub arn:aws:s3:::${LogsBucket}/AWSLogs/${AWS::AccountId}/*

Outputs:

  Name:
    Value: !GetAtt ApplicationLoadBalancer.LoadBalancerName

  DNSName:
    Value: !GetAtt ApplicationLoadBalancer.DNSName

  HostedZoneId:
    Value: !GetAtt ApplicationLoadBalancer.CanonicalHostedZoneID

  LogsBucket:
    Value: !Ref LogsBucket